// Code generated by goctl. DO NOT EDIT.
// Source: order.proto

package server

import (
	"context"

	"zg6/z326/order/internal/logic"
	"zg6/z326/order/internal/svc"
	"zg6/z326/order/order"
)

type OrderServer struct {
	svcCtx *svc.ServiceContext
	order.UnimplementedOrderServer
}

func NewOrderServer(svcCtx *svc.ServiceContext) *OrderServer {
	return &OrderServer{
		svcCtx: svcCtx,
	}
}

func (s *OrderServer) CreateOrder(ctx context.Context, in *order.CreateOrderRequest) (*order.CreateOrderResponse, error) {
	l := logic.NewCreateOrderLogic(ctx, s.svcCtx)
	return l.CreateOrder(in)
}

func (s *OrderServer) CreateOrderGoods(ctx context.Context, in *order.CreateOrderGoodsRequest) (*order.CreateOrderGoodsResponse, error) {
	l := logic.NewCreateOrderGoodsLogic(ctx, s.svcCtx)
	return l.CreateOrderGoods(in)
}

func (s *OrderServer) GetOrder(ctx context.Context, in *order.GetOrderRequest) (*order.GetOrderResponse, error) {
	l := logic.NewGetOrderLogic(ctx, s.svcCtx)
	return l.GetOrder(in)
}

func (s *OrderServer) GetOrderGoods(ctx context.Context, in *order.GetOrderGoodsRequest) (*order.GetOrderGoodsResponse, error) {
	l := logic.NewGetOrderGoodsLogic(ctx, s.svcCtx)
	return l.GetOrderGoods(in)
}

func (s *OrderServer) UpdateOrderByOrderNO(ctx context.Context, in *order.UpdateOrderByOrderNORequest) (*order.UpdateOrderByOrderNOResponse, error) {
	l := logic.NewUpdateOrderByOrderNOLogic(ctx, s.svcCtx)
	return l.UpdateOrderByOrderNO(in)
}
