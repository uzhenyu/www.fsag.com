// Code generated by goctl. DO NOT EDIT.
// Source: order.proto

package orderclient

import (
	"context"

	"zg6/z326/order/order"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	CreateOrderGoodsRequest      = order.CreateOrderGoodsRequest
	CreateOrderGoodsResponse     = order.CreateOrderGoodsResponse
	CreateOrderRequest           = order.CreateOrderRequest
	CreateOrderResponse          = order.CreateOrderResponse
	GetOrderGoodsRequest         = order.GetOrderGoodsRequest
	GetOrderGoodsResponse        = order.GetOrderGoodsResponse
	GetOrderRequest              = order.GetOrderRequest
	GetOrderResponse             = order.GetOrderResponse
	OrderGoodsInfo               = order.OrderGoodsInfo
	OrderInfo                    = order.OrderInfo
	UpdateOrderByOrderNORequest  = order.UpdateOrderByOrderNORequest
	UpdateOrderByOrderNOResponse = order.UpdateOrderByOrderNOResponse

	Order interface {
		CreateOrder(ctx context.Context, in *CreateOrderRequest, opts ...grpc.CallOption) (*CreateOrderResponse, error)
		CreateOrderGoods(ctx context.Context, in *CreateOrderGoodsRequest, opts ...grpc.CallOption) (*CreateOrderGoodsResponse, error)
		GetOrder(ctx context.Context, in *GetOrderRequest, opts ...grpc.CallOption) (*GetOrderResponse, error)
		GetOrderGoods(ctx context.Context, in *GetOrderGoodsRequest, opts ...grpc.CallOption) (*GetOrderGoodsResponse, error)
		UpdateOrderByOrderNO(ctx context.Context, in *UpdateOrderByOrderNORequest, opts ...grpc.CallOption) (*UpdateOrderByOrderNOResponse, error)
	}

	defaultOrder struct {
		cli zrpc.Client
	}
)

func NewOrder(cli zrpc.Client) Order {
	return &defaultOrder{
		cli: cli,
	}
}

func (m *defaultOrder) CreateOrder(ctx context.Context, in *CreateOrderRequest, opts ...grpc.CallOption) (*CreateOrderResponse, error) {
	client := order.NewOrderClient(m.cli.Conn())
	return client.CreateOrder(ctx, in, opts...)
}

func (m *defaultOrder) CreateOrderGoods(ctx context.Context, in *CreateOrderGoodsRequest, opts ...grpc.CallOption) (*CreateOrderGoodsResponse, error) {
	client := order.NewOrderClient(m.cli.Conn())
	return client.CreateOrderGoods(ctx, in, opts...)
}

func (m *defaultOrder) GetOrder(ctx context.Context, in *GetOrderRequest, opts ...grpc.CallOption) (*GetOrderResponse, error) {
	client := order.NewOrderClient(m.cli.Conn())
	return client.GetOrder(ctx, in, opts...)
}

func (m *defaultOrder) GetOrderGoods(ctx context.Context, in *GetOrderGoodsRequest, opts ...grpc.CallOption) (*GetOrderGoodsResponse, error) {
	client := order.NewOrderClient(m.cli.Conn())
	return client.GetOrderGoods(ctx, in, opts...)
}

func (m *defaultOrder) UpdateOrderByOrderNO(ctx context.Context, in *UpdateOrderByOrderNORequest, opts ...grpc.CallOption) (*UpdateOrderByOrderNOResponse, error) {
	client := order.NewOrderClient(m.cli.Conn())
	return client.UpdateOrderByOrderNO(ctx, in, opts...)
}
