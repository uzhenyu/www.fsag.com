// Code generated by goctl. DO NOT EDIT.
// Source: goods.proto

package goodsclient

import (
	"context"

	"zg6/z326/goods/goods"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	GetGoodsIDsRequest   = goods.GetGoodsIDsRequest
	GetGoodsIDsResponse  = goods.GetGoodsIDsResponse
	GoodsInfo            = goods.GoodsInfo
	UpdateStock          = goods.UpdateStock
	UpdateStocksRequest  = goods.UpdateStocksRequest
	UpdateStocksResponse = goods.UpdateStocksResponse

	Goods interface {
		GetGoodsIDs(ctx context.Context, in *GetGoodsIDsRequest, opts ...grpc.CallOption) (*GetGoodsIDsResponse, error)
		UpdateStocks(ctx context.Context, in *UpdateStocksRequest, opts ...grpc.CallOption) (*UpdateStocksResponse, error)
	}

	defaultGoods struct {
		cli zrpc.Client
	}
)

func NewGoods(cli zrpc.Client) Goods {
	return &defaultGoods{
		cli: cli,
	}
}

func (m *defaultGoods) GetGoodsIDs(ctx context.Context, in *GetGoodsIDsRequest, opts ...grpc.CallOption) (*GetGoodsIDsResponse, error) {
	client := goods.NewGoodsClient(m.cli.Conn())
	return client.GetGoodsIDs(ctx, in, opts...)
}

func (m *defaultGoods) UpdateStocks(ctx context.Context, in *UpdateStocksRequest, opts ...grpc.CallOption) (*UpdateStocksResponse, error) {
	client := goods.NewGoodsClient(m.cli.Conn())
	return client.UpdateStocks(ctx, in, opts...)
}
